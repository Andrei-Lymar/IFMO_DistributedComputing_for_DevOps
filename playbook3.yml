- name: Create User
  hosts: db_master, db_slave
  become: yes
  vars:
    mariadb_exporter_password: "exportpass"
  tasks:
    - name: User
      community.mysql.mysql_user:
        login_user: root
        login_password: "{{ mariadb_root_password }}"
        name: "exporter"
        password: "{{ mariadb_exporter_password }}"
        host: "%"
        priv: "*.*:PROCESS, REPLICATION CLIENT, SELECT"
        state: present

- name: Deploy monitoring
  hosts: all
  become: yes
  tasks:
    - name: Config dir
      file:
        path: /etc/prometheus
        state: directory

    - name: Create Config
      copy:
        content: |
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: 'mariadb'
              static_configs:
                - targets:
                  {% for host in groups['db_master'] + groups['db_slave'] %}
                  - "{{ hostvars[host].inventory_hostname }}:9104"
                  {% endfor %}
        dest: /etc/prometheus/prometheus.yml

- name: Deploy export
  hosts: db_master, db_slave
  become: yes
  tasks:
    - name: Run export
      docker_container:
        name: mysqld-exporter
        image: prom/mysqld-exporter:v0.14.0
        state: started
        restart_policy: unless-stopped
        env:
          DATA_SOURCE_NAME: "exporter:{{ mariadb_exporter_password }}@tcp({{ inventory_hostname }}:3306)/"
        ports:
          - "9104:9104"
        networks:
          - name: backend

- name: Start monitoring
  hosts: wordpress_server
  become: yes
  tasks:
    - name: Run Prometheus
      docker_container:
        name: prometheus
        image: prom/prometheus:latest
        state: started
        restart_policy: unless-stopped
        volumes:
          - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        ports:
          - "9090:9090"
        networks:
          - name: backend

    - name: Run Grafana
      docker_container:
        name: grafana
        image: grafana/grafana:latest
        state: started
        restart_policy: unless-stopped
        ports:
          - "3000:3000"
        volumes:
          - grafana_data:/var/lib/grafana
          - ./14621.json:/tmp/14621.json
        networks:
          - name: backend

    - name: Wait for Grafana
      wait_for:
        port: 3000
        delay: 10
        timeout: 60

    - name: Config Prometheus for Grafana
      uri:
        url: "http://localhost:3000/api/datasources"
        method: POST
        body_format: json
        headers:
          Content-Type: "application/json"
        body:
          name: "Prometheus"
          type: "prometheus"
          url: "http://prometheus:9090"
          access: "proxy"
          isDefault: true
        user: "admin"
        password: "admin"
        force_basic_auth: yes
        status_code: 200
      register: datasource_result
      retries: 5
      delay: 10

    - name: Import dash
      uri:
        url: "http://localhost:3000/api/dashboards/db"
        method: POST
        body_format: json
        headers:
          Content-Type: "application/json"
        body:
          dashboard: "{{ lookup('file', '14621.json') | from_json }}"
          overwrite: true
          folderId: 0
        user: "admin"
        password: "admin"
        force_basic_auth: yes
        status_code: 200
      register: dashboard_result
      retries: 5
      delay: 10


